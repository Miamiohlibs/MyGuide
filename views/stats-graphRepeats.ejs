<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyGuide Usage</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"></script>
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script src="/js/d3-v4-tip.js"></script>
    <script src="/js/createPieChart.js"></script>
    <style>
        g.text {
            z-index: 100;
        }
        .d3-tip {
            line-height: 1;
            font-weight: bold;
            padding: 12px;
            background: rgba(0, 0, 0, 0.8);
            color: #fff;
            border-radius: 2px;
        }
    </style>
</head>

<%- include('./partials/stats-nav.ejs', { page: page } ) %>

<body class="container">
    <div id="options">
        <div class="row">

        <ul id="population-selector" class="btn-group col-lg-6">
            <li CLASS="btn disabled">Population:</li>
            <li class="btn btn-primary active" data-population="all">All Users</li>
            <li class="btn btn-primary " data-population="student">Student</li>
            <li class="btn btn-primary" data-population="faculty">Faculty</li>
            <li class="btn btn-primary" data-population="staff">Staff</li>
        </ul>

        <div class="col-lg-6">
            <div class="input-group">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="condense-switch" checked>
                    <label class="form-check-label" for="condense-switch">
                        Condense data above 10 uses
                    </label>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="input-group">
                <div class="input-group-prepend">
                    <label for="startDate" class="input-group-text">Start date:</label>
                </div>
               
                <input type="date" class="form-control dateField" id="startDate" name="startDate" value="2021-08-31"
               min="2021-08-31">
            </div>
        </div>


        <div class="col-lg-4">
        <div class="input-group">
            <div class="input-group-prepend">
                <label for="endDate" class="input-group-text">End date:</label>
            </div>
            <input type="date" class="form-control dateField" id="endDate" name="endDate" value=""
      min="2021-08-31">
      </div>
      </div>
    </div>
    
    <svg height="500" width="1000"></svg>
    <div id="rawData"></div>
    <script>
        var d = new Date();
        console.log('month'+d.getMonth())
        if (d.getMonth() < 9) { monthPadding = '0'; } else { monthPadding = ''}
        var today = d.getFullYear() + "-" + monthPadding +  (d.getMonth()+1) + "-" + d.getDate();
            $(document).ready(function() {
                $('.dateField').each(function() {
                    $(this).attr('max',today);
                });
                $('#endDate').attr('value',today);
                updateChart();
                $('.btn').click(function() {
                    clkBtn = $(this);
                    clkBtn.parent().children('.btn').each(function(i) {
                        $(this).removeClass('active');
                    });
                    clkBtn.addClass('active'); // primary will be added by updateChart
                    updateChart();
                });
                $('.dateField').change(function() {
                    updateChart();
                })
                $('#condense-switch').change(function() {
                    updateChart();
                })
            });
            function updateChart() {
                let activePopBtn = $('#population-selector li.active');
                let population = activePopBtn.data('population')

                // let activeLevelBtn = $('#dataLevel-selector li.active');
                // let dataLevel = activeLevelBtn.data('level');

                let startDate=$('#startDate').val() || '2019-08-15';
                let endDate=$('#endDate').val() || today;
                let breakpoint = false;
                if ($('#condense-switch').is(':checked')) {
                    breakpoint = 10;
                }
                let dataOptions = {population, startDate, endDate, breakpoint};
                console.log('doChart with', dataOptions)
                doChart(dataOptions);
            }
        // doChart();
        function doChart(o) {
                $('svg').empty();
                console.log($.param(o) )
                jQuery.getJSON('./repeatData?'+$.param(o), function(data) {
                    fullData = data;
                    data = data.repeatData.repeatUserData;
                console.log(fullData);
                // let levelLabels = {
                //     'periodUses': 'Uses',
                //     'periodDistinctUsers': 'Distinct Users'
                // }
                let options = {
                    margin: {top: 100, right: 0, bottom: 0, left: 0},
                    // xValueProp: 'period', // this is the data[xValueLabel] property with data in it
                    // xAxisLabel: 'Date',
                    // yValueProp: o.dataLevel,
                    // yAxisLabel: levelLabels[o.dataLevel],
                    valueKey: 'users', // this is the data[valueLabel] property with data in it
                    labelKey: 'timesUsed', // this is the data[labelLabel] property with labelUses in it
                    chartTitle: 'MyGuide Users by Number of Repeat Uses',
                    sortSlicesBySize: false
                }

                // // get sum of users from data
                // const sum = data.reduce((accumulator, obj) => {
                //     return accumulator + obj.users;
                // }, 0);

                // // add label with more info
                // data.forEach(obj => {
                //     obj.percent = obj.users / sum * 100;
                //     obj.label = `${obj.timesUsed} uses: ${obj.users}`;
                // });

                createPieChart(data, options);
                $('#rawData').html('<pre>' + JSON.stringify(fullData,null,2) + '</pre>')
                });
            }
    </script>
</body>
</html>